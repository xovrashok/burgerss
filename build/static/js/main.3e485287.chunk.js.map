{"version":3,"sources":["sample-restaurants.js","components/Landing.js","components/Header.js","components/Shipment.js","components/Order.js","components/AddBurgerForm.js","components/EditBurgerForm.js","components/MenuAdmin.js","sample-burgers.js","components/Burger.js","base.js","components/Auth/Login.js","components/Auth/SignIn.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["restaurants","title","url","id","Landing","props","useState","display","toggleDisplay","setTitle","setUrl","className","onClick","map","restaurant","getTitle","key","history","push","Header","Shipment","total","this","shipping","shippingNeon","React","Component","Order","renderOrder","burger","burgers","count","order","isAvailable","status","CSSTransition","timeout","enter","exit","name","price","deleteFromOrder","orderIds","Object","keys","reduce","prevTotal","TransitionGroup","component","AddBurgerForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createBurger","event","preventDefault","current","value","parseFloat","desc","image","addBurger","onSubmit","ref","type","placeholder","autoComplete","EditBurgerForm","handleChage","updatedBurger","currentTarget","updateBurger","index","onChange","deleteBurger","MenuAdmin","state","photo","user","authHandler","authData","a","email","photoURL","setState","firebase","auth","onAuthStateChanged","avatar","src","alt","handleLogout","loadSampleBurgers","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","Burger","details","disabled","addToOrder","firebaseApp","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Login","authenticate","SignIn","authProvider","signInWithPopup","then","children","App","console","log","Date","now","signOut","window","location","reload","params","match","localStorageRef","localStorage","getItem","restaurantId","JSON","parse","syncState","context","setItem","stringify","removeBinding","NotFound","Router","exact","path","render","document","querySelector"],"mappings":"qNAoBeA,EAnBK,CAClB,CACEC,MAAO,0EACPC,IAAK,wBACLC,GAAI,GAGN,CACEF,MAAO,8DACPC,IAAK,sBACLC,GAAI,GAEN,CACEF,MAAO,0EACPC,IAAK,wBACLC,GAAI,IC2COC,EAvDC,SAACC,GAAW,IAAD,EAEUC,oBAAS,GAFnB,mBAEhBC,EAFgB,KAEPC,EAFO,OAGGF,mBAAS,IAHZ,mBAGhBL,EAHgB,KAGTQ,EAHS,OAIDH,mBAAS,IAJR,mBAIhBJ,EAJgB,KAIXQ,EAJW,KAoBvB,OACI,yBAAKC,UAAU,qBACX,yBAAKA,UAAU,yBACX,yBACIC,QAlBI,WAChBJ,GAAeD,IAkBHI,UAAU,oDACTV,GAAgB,yFAErB,yBAAKU,UAAU,gBACX,yBAAKA,UAAU,oBACf,yBAAKA,UAAU,wBAItBJ,EAAU,yBAAKI,UAAU,4BACtB,4BACKX,EAAYa,KAAI,SAAAC,GACb,OAAO,wBACHF,QAAS,kBA5BhB,SAACE,GAAgB,IACtBb,EAAea,EAAfb,MAAOC,EAAQY,EAARZ,IACfO,EAASR,GACTS,EAAOR,GACPM,GAAc,GAwBqBO,CAASD,IACxBE,IAAKF,EAAWX,IAAKW,EAAWb,YAIvC,KAERA,IAAUM,EACN,4BAAQK,QA7BG,WACpBP,EAAMY,QAAQC,KAAd,sBAAkChB,MA4BzB,sGAAiE,O,8DCpBnEiB,EA3BA,SAAAd,GAAK,OACZ,4BAAQM,UAAU,OACd,yBAAKA,UAAU,QACX,yBAAKA,UAAU,kBAEX,yBAAKA,UAAU,iBACX,yBAAKA,UAAU,qBAAf,gDACA,yBAAKA,UAAU,sBAAf,mCAGJ,yBAAKA,UAAU,mBACf,wBAAIA,UAAU,8BAA8BN,EAAMJ,OAClD,4BACI,uKAEQ,0BAAMU,UAAU,cAAhB,4DCqBjBS,E,4JA9BX,WAAU,IACEC,EAAUC,KAAKjB,MAAfgB,MACFE,EAAWF,EAAQ,GAAKA,EAAQ,IAAM,IAAM,GAC5CG,EACW,KAAbD,EACA,0BAAMZ,UAAU,qCACXY,EADL,WAIA,8BAAOA,EAAP,WAEJ,OACA,yBAAKZ,UAAU,SACP,yBAAKA,UAAU,cAEX,6BACI,kFAAgBU,EAAQ,EAAIG,EAAe,MAC3C,yBAAKb,UAAU,mBACVU,EAAQ,IAAR,2FAAiC,IAAMA,EAAvC,sGAAwE,OAGrF,yBAAKV,UAAU,oBAAf,mCACYU,S,GA5BLI,IAAMC,W,gBCsFdC,E,4MA3EXC,YAAc,SAACZ,GACX,IAAMa,EAAS,EAAKxB,MAAMyB,QAAQd,GAC5Be,EAAQ,EAAK1B,MAAM2B,MAAMhB,GAEzBiB,EAAcJ,GAA4B,cAAlBA,EAAOK,OAErC,OAAKL,EAEAI,EAcD,kBAACE,EAAA,EAAD,CACIxB,UAAU,QACVK,IAAKA,EACLoB,QAAS,CAAEC,MAAO,IAAMC,KAAM,MAClC,wBAAItB,IAAKA,GACL,8BACI,8BAAOe,GADX,iBAEKF,EAAOU,KACR,8BAAOR,EAAQF,EAAOW,MAAtB,WACA,4BACI5B,QAAS,kBAAM,EAAKP,MAAMoC,gBAAgBzB,IAC1CL,UAAU,eAFd,WArBJ,kBAACwB,EAAA,EAAD,CACIxB,UAAU,QACVK,IAAKA,EACLoB,QAAS,CAAEC,MAAO,IAAMC,KAAM,MAClC,wBAAI3B,UAAU,cAAcK,IAAKA,GAAjC,qDACWa,EAASA,EAAOU,KAAO,uCADlC,mHARY,M,4CAiCxB,WAAU,IAAD,OACCG,EAAWC,OAAOC,KAAKtB,KAAKjB,MAAM2B,OAClCX,EAAQqB,EAASG,QAAO,SAACC,EAAW9B,GACtC,IAAMa,EAAS,EAAKxB,MAAMyB,QAAQd,GAC5Be,EAAQ,EAAK1B,MAAM2B,MAAMhB,GAG/B,OADoBa,GAA4B,cAAlBA,EAAOK,OAE1BY,EAAYjB,EAAOW,MAAQT,EAE/Be,IAER,GAEH,OACI,yBAAKnC,UAAU,cACX,iFACA,kBAACoC,EAAA,EAAD,CACIC,UAAU,KACVrC,UAAU,SACT+B,EAAS7B,IAAIS,KAAKM,cAGtBP,EAAQ,EACL,kBAAC,EAAD,CAAUA,MAAOA,IAEb,yBAAKV,UAAU,mBAAf,4L,GAzEJc,IAAMC,WC4DXuB,E,4MAxDXC,QAAUzB,IAAM0B,Y,EAChBC,SAAW3B,IAAM0B,Y,EACjBE,UAAY5B,IAAM0B,Y,EAClBG,QAAU7B,IAAM0B,Y,EAChBI,SAAW9B,IAAM0B,Y,EAGjBK,aAAe,SAACC,GACZA,EAAMC,iBACN,IAAM7B,EAAS,CACXU,KAAM,EAAKW,QAAQS,QAAQC,MAC3BpB,MAAOqB,WAAW,EAAKT,SAASO,QAAQC,OAAS,GACjD1B,OAAQ,EAAKmB,UAAUM,QAAQC,MAC/BE,KAAM,EAAKR,QAAQK,QAAQC,MAC3BG,MAAO,EAAKR,SAASI,QAAQC,OAEjC,EAAKvD,MAAM2D,UAAUnC,I,4CAEzB,WACI,OACI,0BAAMlB,UAAU,cAAcsD,SAAU3C,KAAKkC,cACzC,2BACIU,IAAK5C,KAAK4B,QACVX,KAAK,OACL4B,KAAK,OACLC,YAAY,OACZC,aAAa,QACjB,2BACIH,IAAK5C,KAAK8B,SACVb,KAAK,QACL4B,KAAK,OACLC,YAAY,QACZC,aAAa,QACjB,4BACIH,IAAK5C,KAAK+B,UACVd,KAAK,SACL5B,UAAU,UACV,4BAAQiD,MAAM,aAAd,oDACA,4BAAQA,MAAM,eAAd,+EAEJ,8BACIM,IAAK5C,KAAKgC,QACVf,KAAK,OACL6B,YAAY,SAChB,2BACIF,IAAK5C,KAAKiC,SACVhB,KAAK,QACL4B,KAAK,OACLC,YAAY,QACZC,aAAa,QACjB,4BAAQF,KAAK,UAAb,4F,GAxDY1C,IAAMC,W,QCgEnB4C,E,4MAjDXC,YAAc,SAACd,GACX,IAAMe,EAAa,2BACZ,EAAKnE,MAAMwB,QADC,kBAEd4B,EAAMgB,cAAclC,KAAoC,UAA7BkB,EAAMgB,cAAclC,KAC1CsB,WAAWJ,EAAMgB,cAAcb,OAASH,EAAMgB,cAAcb,QAEtE,EAAKvD,MAAMqE,aAAa,EAAKrE,MAAMsE,MAAOH,I,4CAG9C,WAAU,IAAD,OACL,OACI,yBAAK7D,UAAU,eACX,2BACIiE,SAAUtD,KAAKiD,YACfhC,KAAK,OACL4B,KAAK,OACLP,MAAOtC,KAAKjB,MAAMwB,OAAOU,OAE7B,2BACIqC,SAAUtD,KAAKiD,YACfhC,KAAK,QACL4B,KAAK,OACLP,MAAOtC,KAAKjB,MAAMwB,OAAOW,QAE7B,4BACIoC,SAAUtD,KAAKiD,YACfhC,KAAK,SACL5B,UAAU,UAHd,SAIWW,KAAKjB,MAAMwB,OAAOK,OACzB,4BAAQ0B,MAAM,aAAd,oDACA,4BAAQA,MAAM,eAAd,+EAEJ,8BACIgB,SAAUtD,KAAKiD,YACfhC,KAAK,OACLqB,MAAOtC,KAAKjB,MAAMwB,OAAOiC,OAE7B,2BACIc,SAAUtD,KAAKiD,YACfhC,KAAK,QACL4B,KAAK,OACLP,MAAOtC,KAAKjB,MAAMwB,OAAOkC,QAE7B,4BAAQnD,QAAS,kBAAK,EAAKP,MAAMwE,aAAa,EAAKxE,MAAMsE,SAAzD,yF,GA1DalD,IAAMC,W,QC6DpBoD,E,4MAxDXC,MAAQ,CACJC,MAAO,GACPC,KAAM,I,EAmBVC,Y,uCAAc,WAAMC,GAAN,mBAAAC,EAAA,wDACkBD,EAASF,KAA7BI,EADE,EACFA,MAAOC,EADL,EACKA,SACf,EAAKC,SAAS,CAAEN,KAAMI,EAAOL,MAAOM,IAF1B,2C,6GARd,WAAqB,IAAD,OAChBE,UAASC,OAAOC,oBAAmB,SAAAT,GAC3BA,GACA,EAAKC,YAAY,CAAED,c,oBAU/B,WAAU,IAAD,SACmB3D,KAAKyD,MAArBE,EADH,EACGA,KAAMD,EADT,EACSA,MACRW,EAASX,GAAgB,qBAC/B,OACI,yBAAKrE,UAAU,cACVsE,EAAO,yBAAKtE,UAAU,gBACnB,yBAAKA,UAAU,UACX,yBAAKiF,IAAKD,EAAQE,IAAKZ,KAE3B,4BAAQtE,UAAU,eAAeC,QAASU,KAAKjB,MAAMyF,cAArD,mCAGK,KACT,qHACCnD,OAAOC,KAAKtB,KAAKjB,MAAMyB,SAASjB,KAAI,SAAAG,GACjC,OAAO,kBAAC,EAAD,CACHA,IAAKA,EACL2D,MAAO3D,EACP6D,aAAc,EAAKxE,MAAMwE,aACzBH,aAAc,EAAKrE,MAAMqE,aACzB7C,OAAQ,EAAKxB,MAAMyB,QAAQd,QAGnC,kBAAC,EAAD,CAAegD,UAAW1C,KAAKjB,MAAM2D,YACrC,4BAAQpD,QAASU,KAAKjB,MAAM0F,mBAA5B,0G,GApDQtE,IAAMC,WC6EfsE,EAnFO,CACpBC,QAAS,CACP1D,KAAM,yDACNwB,MAAO,qBACPD,KACE,+hBACFtB,MAAO,GACPN,OAAQ,aAGVgE,QAAS,CACP3D,KAAM,qEACNwB,MAAO,sBACPD,KACE,ybACFtB,MAAO,GACPN,OAAQ,aAGViE,QAAS,CACP5D,KAAM,oGACNwB,MAAO,qBACPD,KACE,udACFtB,MAAO,GACPN,OAAQ,eAGVkE,QAAS,CACP7D,KAAM,yDACNwB,MAAO,mBACPD,KACE,0jBACFtB,MAAO,GACPN,OAAQ,aAGVmE,QAAS,CACP9D,KAAM,4EACNwB,MAAO,oBACPD,KACE,0kBACFtB,MAAO,GACPN,OAAQ,aAGVoE,QAAS,CACP/D,KAAM,4CACNwB,MAAO,kBACPD,KACE,0oBACFtB,MAAO,IACPN,OAAQ,aAGVqE,QAAS,CACPhE,KAAM,gEACNwB,MAAO,mBACPD,KACE,qoBACFtB,MAAO,IACPN,OAAQ,aAGVsE,QAAS,CACPjE,KAAM,uEACNwB,MAAO,mBACPD,KACE,smBACFtB,MAAO,GACPN,OAAQ,aAGVuE,QAAS,CACPlE,KAAM,6BACNwB,MAAO,yBACPD,KACE,6dACFtB,MAAO,GACPN,OAAQ,cClCGwE,E,4JA7BX,WAAU,IAAD,SAEwCpF,KAAKjB,MAAMsG,QAAhD5C,EAFH,EAEGA,MAAOxB,EAFV,EAEUA,KAAMC,EAFhB,EAEgBA,MAAOsB,EAFvB,EAEuBA,KACtB7B,EAAyB,cAH1B,EAE6BC,OAGlC,OACI,wBAAIvB,UAAU,eACV,yBAAKA,UAAU,mBACX,yBAAKiF,IAAK7B,EAAO8B,IAAKtD,KAG1B,yBAAK5B,UAAU,kBACX,wBAAIA,UAAU,eACT4B,EACD,0BAAM5B,UAAU,SAAS6B,EAAzB,YAEJ,2BAAIsB,GACJ,4BACInD,UAAU,cACViG,UAAW3E,EACXrB,QAAS,kBAAM,EAAKP,MAAMwG,WAAW,EAAKxG,MAAMsE,SAE/C1C,EAAc,mDAAY,6E,GApC9BR,IAAMC,W,iBCErBoF,G,YAActB,UAASuB,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wDAOFC,EAJFC,IAAOC,YAAYP,EAAYQ,YCW7BC,EAlBD,SAAAlH,GACV,OACI,yBAAKM,UAAU,mBACX,yBAAKA,UAAU,SACX,kGACA,4OACA,4BAAQA,UAAU,SAASC,QAAS,kBAAMP,EAAMmH,iBAAhD,qCC6BDC,E,4MAjCX1C,MAAQ,CACJE,KAAM,I,EAWVC,Y,uCAAc,WAAMC,GAAN,eAAAC,EAAA,sDACFC,EAAUF,EAASF,KAAnBI,MACR,EAAKE,SAAS,CAAEN,KAAMI,IAFZ,2C,wDAKdmC,aAAe,WACX,IAAME,EAAe,IAAIlC,UAASC,KAAT,mBACzBqB,EACKrB,OACAkC,gBAAgBD,GAChBE,KAAK,EAAK1C,c,uDAlBnB,WAAqB,IAAD,OAChBM,UAASC,OAAOC,oBAAmB,SAAAT,GAC3BA,GACA,EAAKC,YAAY,CAAED,c,oBAkB/B,WACI,OAAK3D,KAAKyD,MAAME,KAGT3D,KAAKjB,MAAMwH,SAFP,kBAAC,EAAD,CAAOL,aAAclG,KAAKkG,mB,GA5BxB/F,IAAMC,WCmHZoG,E,4MAxGX/C,MAAQ,CACJjD,QAAS,GACTE,MAAO,I,EA0BXgC,UAAY,SAACnC,GACTkG,QAAQC,IAAI,YAAanG,GACzB,IAAMC,EAAO,eAAQ,EAAKiD,MAAMjD,SAChCA,EAAQ,SAAD,OAAUmG,KAAKC,QAAWrG,EACjC,EAAK0D,SAAS,CAACzD,a,EAGnB4C,aAAc,SAAC1D,EAAKwD,GAChB,IAAM1C,EAAO,eAAQ,EAAKiD,MAAMjD,SAChCA,EAAQd,GAAOwD,EACf,EAAKe,SAAS,CAAEzD,a,EAGpB+C,aAAe,SAAC7D,GACZ,IAAMc,EAAO,eAAQ,EAAKiD,MAAMjD,SAChCA,EAAQd,GAAO,KACf,EAAKuE,SAAS,CAAEzD,a,EAGpBiE,kBAAoB,WAChB,EAAKR,SAAS,CAAEzD,QAASkE,K,EAG7Ba,WAAa,SAAC7F,GACV,IAAMgB,EAAK,eAAQ,EAAK+C,MAAM/C,OAC9BA,EAAMhB,GAAOgB,EAAMhB,GAAO,GAAK,EAC/B,EAAKuE,SAAS,CAAEvD,W,EAGpBS,gBAAkB,SAAAzB,GACd,IAAMgB,EAAK,eAAQ,EAAK+C,MAAM/C,cACvBA,EAAMhB,GACb,EAAKuE,SAAS,CAAEvD,W,EAGpB8D,a,sBAAe,sBAAAV,EAAA,sEACLI,UAASC,OAAO0C,UADX,OAEXC,OAAOC,SAASC,SAFL,2C,uDA1Df,WAAqB,IACTC,EAAWjH,KAAKjB,MAAMmI,MAAtBD,OAEFE,EAAkBC,aAAaC,QAAQJ,EAAOK,cAChDH,GACAnH,KAAKiE,SAAS,CAAEvD,MAAO6G,KAAKC,MAAML,KAGtCnH,KAAK4C,IAAMiD,EAAK4B,UAAL,UAAkBR,EAAOK,aAAzB,YAAiD,CACxDI,QAAS1H,KACTyD,MAAO,c,gCAIf,WAAsB,IACVwD,EAAWjH,KAAKjB,MAAMmI,MAAtBD,OACRG,aAAaO,QAAQV,EAAOK,aAAcC,KAAKK,UAAU5H,KAAKyD,MAAM/C,U,kCAGxE,WACImF,EAAKgC,cAAc7H,KAAK4C,O,oBA2C5B,WAAU,IAAD,OACL,OACI,kBAAC,EAAD,KACA,yBAAKvD,UAAU,mBACX,yBAAKA,UAAU,QACX,kBAAC,EAAD,CAAQV,MAAM,eACd,wBAAIU,UAAU,WACTgC,OAAOC,KAAKtB,KAAKyD,MAAMjD,SAASjB,KAAI,SAAAG,GACjC,OAAO,kBAAC,EAAD,CACHA,IAAKA,EACL2D,MAAO3D,EACP6F,WAAY,EAAKA,WACjBF,QAAS,EAAK5B,MAAMjD,QAAQd,UAK5C,kBAAC,EAAD,CACIyB,gBAAiBnB,KAAKmB,gBACtBX,QAASR,KAAKyD,MAAMjD,QACpBE,MAAOV,KAAKyD,MAAM/C,QAEtB,kBAAC,EAAD,CACIgC,UAAW1C,KAAK0C,UAChB+B,kBAAmBzE,KAAKyE,kBACxBjE,QAASR,KAAKyD,MAAMjD,QACpB4C,aAAcpD,KAAKoD,aACnBG,aAAcvD,KAAKuD,aACnBiB,aAAcxE,KAAKwE,qB,GArGrBrE,IAAMC,WCDT0H,EARE,WACb,OACI,6BACI,uD,eCaGC,EAXA,WACX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIvG,UAAW5C,IACjC,kBAAC,IAAD,CAAOmJ,KAAK,4BAA4BvG,UAAW8E,IACnD,kBAAC,IAAD,CAAO9E,UAAWoG,O,MCPlCI,iBAAO,kBAAC,EAAD,MAAYC,SAASC,cAAc,Y","file":"static/js/main.3e485287.chunk.js","sourcesContent":["// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Московский',\n    url: 'hot-burger-moskovskiy',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Салтовка',\n    url: 'hot-burger-saltovka',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Алексеевка',\n    url: 'hot-burger-alekseevka',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport restaurants from '../sample-restaurants';\r\n\r\nconst Landing = (props) => {\r\n\r\n    const [display, toggleDisplay] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    const displayList = () => {\r\n        toggleDisplay(!display);\r\n    }\r\n\r\n    const getTitle = (restaurant) => {\r\n        const { title, url } = restaurant;\r\n        setTitle(title);\r\n        setUrl(url);\r\n        toggleDisplay(false);\r\n    }\r\n\r\n    const gotToRestaurant = () => {\r\n        props.history.push(`/restaurant/${url}`);\r\n    }\r\n    return (\r\n        <div className='restaurant_select'>\r\n            <div className='restaurant_select_top'>\r\n                <div\r\n                    onClick={displayList}\r\n                    className='restaurant_select_top-header font-effect-outline'>\r\n                    {title ? title : 'Выбери Ресторан'}\r\n                </div>\r\n                <div className='arrow_picker'>\r\n                    <div className='arrow_picker-up'></div>\r\n                    <div className='arrow_picker-down'></div>\r\n                </div>\r\n            </div>\r\n\r\n            {display ? <div className='restaurant_select_bottom'>\r\n                <ul>\r\n                    {restaurants.map(restaurant => {\r\n                        return <li\r\n                            onClick={() => getTitle(restaurant)}\r\n                            key={restaurant.id}>{restaurant.title}\r\n                        </li>\r\n                    })}\r\n                </ul>\r\n            </div> : null}\r\n\r\n            {title && !display ?\r\n                (<button onClick={gotToRestaurant}>Перейти в ресторан</button>) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nLanding.propTypes = {\r\n    history: PropTypes.object\r\n}\r\n\r\nexport default Landing;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => (\r\n        <header className='top'>\r\n            <div className='wrap'>\r\n                <div className='header-content'>\r\n\r\n                    <div className='header-rating'>\r\n                        <div className='header-rating_tag'>Рейтинг: </div>\r\n                        <div className='header-rating_icon'>★★★★★</div>\r\n                    </div>\r\n\r\n                    <div className='header-divider'></div>\r\n                    <h1 className='font-effect-fire-animation'>{props.title}</h1>\r\n                    <h3>\r\n                        <span>\r\n                            Быстрая доставка горячих\r\n                                <span className='sub-header'> #бургеров</span>\r\n                        </span>\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Shipment extends React.Component {\r\n\r\n    static propTypes = {\r\n        total: PropTypes.number,        \r\n    }\r\n\r\n    render() {\r\n        const { total } = this.props;\r\n        const shipping = total > 0 && total < 200 ? 100 : 40;\r\n        const shippingNeon =\r\n            shipping === 40 ? (\r\n            <span className='font-effect-neon total_wrap-cheap'>\r\n                {shipping} ₴\r\n            </span>\r\n        ) : (\r\n            <span>{shipping} ₴</span>\r\n        );\r\n        return (\r\n        <div className='total'>\r\n                <div className='total_wrap'>\r\n\r\n                    <div>\r\n                        <div>Доставка: {total > 0 ? shippingNeon : null}</div>\r\n                        <div className='total_wrap-free'>\r\n                            {total < 200 ? `Закажите ещё на ${200 - total} ₴ для доставки за 40 ₴` : null}\r\n                        </div>\r\n                    </div>\r\n                <div className='total_wrap-final'>\r\n                    Итого: {total}\r\n                </div>\r\n            </div>\r\n        </div >\r\n        ); \r\n    }\r\n}\r\n\r\nexport default Shipment;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Shipment from './Shipment';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nclass Order extends React.Component {\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,\r\n        order: PropTypes.object,\r\n        deleteFromOrder: PropTypes.func\r\n    }\r\n\r\n    renderOrder = (key) => {\r\n        const burger = this.props.burgers[key];\r\n        const count = this.props.order[key];\r\n\r\n        const isAvailable = burger && burger.status === 'available';\r\n\r\n        if (!burger) return null;\r\n\r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition\r\n                    className='order'\r\n                    key={key}\r\n                    timeout={{ enter: 5000, exit: 5000 }}>\r\n                <li className='unavailable' key={key}>\r\n                Извините, {burger ? burger.name : 'бургер'} временно недоступен\r\n            </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <CSSTransition\r\n                className='order'\r\n                key={key}\r\n                timeout={{ enter: 5000, exit: 5000 }}>\r\n            <li key={key}>\r\n                <span>\r\n                    <span>{count}</span>\r\n                шт. {burger.name}\r\n                    <span>{count * burger.price} ₴</span>\r\n                    <button\r\n                        onClick={() => this.props.deleteFromOrder(key)}\r\n                        className='cancellItem'>&times;</button>\r\n                </span>\r\n                </li>\r\n            </CSSTransition>\r\n        );\r\n    }\r\n    render() {\r\n        const orderIds = Object.keys(this.props.order);\r\n        const total = orderIds.reduce((prevTotal, key) => {\r\n            const burger = this.props.burgers[key];\r\n            const count = this.props.order[key];\r\n\r\n            const isAvailable = burger && burger.status === 'available';\r\n            if (isAvailable) {\r\n                return prevTotal + burger.price * count;\r\n            }\r\n            return prevTotal;\r\n            \r\n        }, 0)\r\n\r\n        return (\r\n            <div className='order-wrap'>\r\n                <h2>Ваш заказ</h2>\r\n                <TransitionGroup\r\n                    component='ul'\r\n                    className='order'>\r\n                    {orderIds.map(this.renderOrder)}\r\n                </TransitionGroup>   \r\n\r\n                {total > 0 ? (\r\n                    <Shipment total={total} />\r\n                ) : (\r\n                        <div className='nothingSelected'>\r\n                            Выберите блюда и добавьте к заказу\r\n                        </div>\r\n                        )}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass AddBurgerForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        addBurger: PropTypes.func \r\n    }\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n\r\n    createBurger = (event) => {\r\n        event.preventDefault();\r\n        const burger = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value || 0),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value\r\n        };\r\n        this.props.addBurger(burger);\r\n    };\r\n    render() {\r\n        return (\r\n            <form className='burger-edit' onSubmit={this.createBurger}>\r\n                <input\r\n                    ref={this.nameRef}\r\n                    name='name'\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    autoComplete='off' />\r\n                <input\r\n                    ref={this.priceRef}\r\n                    name='price'\r\n                    type='text'\r\n                    placeholder='Price'\r\n                    autoComplete='off' />\r\n                <select\r\n                    ref={this.statusRef}\r\n                    name='status'\r\n                    className='status'>\r\n                    <option value='available'>Доступно</option>\r\n                    <option value='unavailable'>Убрать из меню</option>\r\n                </select>\r\n                <textarea\r\n                    ref={this.descRef}\r\n                    name='desc'\r\n                    placeholder='Desc' />\r\n                <input\r\n                    ref={this.imageRef}\r\n                    name='image'\r\n                    type='text'\r\n                    placeholder='Image'\r\n                    autoComplete='off' />\r\n                <button type='submit'> + Добавить в меню</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddBurgerForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass EditBurgerForm extends React.Component {\r\n\r\n    static propTypes = {\r\n        burger: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string\r\n        }),\r\n        index: PropTypes.string,\r\n        updateBurger: PropTypes.func,\r\n        deleteBurger: PropTypes.func,\r\n    }\r\n\r\n    handleChage = (event) => {\r\n        const updatedBurger = {\r\n            ...this.props.burger,\r\n            [event.currentTarget.name]: event.currentTarget.name === 'price'\r\n                ? parseFloat(event.currentTarget.value) : event.currentTarget.value\r\n        };\r\n        this.props.updateBurger(this.props.index, updatedBurger);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className='burger-edit'>\r\n                <input\r\n                    onChange={this.handleChage}\r\n                    name='name'\r\n                    type='text'\r\n                    value={this.props.burger.name}\r\n                     />\r\n                <input \r\n                    onChange={this.handleChage}\r\n                    name='price'\r\n                    type='text'\r\n                    value={this.props.burger.price}\r\n                     />\r\n                <select  \r\n                    onChange={this.handleChage}\r\n                    name='status'\r\n                    className='status'>\r\n                    value={this.props.burger.status}\r\n                    <option value='available'>Доступно</option>\r\n                    <option value='unavailable'>Убрать из меню</option>\r\n                </select>\r\n                <textarea \r\n                    onChange={this.handleChage}\r\n                    name='desc'\r\n                    value={this.props.burger.desc}\r\n                     />\r\n                <input   \r\n                    onChange={this.handleChage}\r\n                    name='image'\r\n                    type='text'\r\n                    value={this.props.burger.image}\r\n                />\r\n                <button onClick={()=> this.props.deleteBurger(this.props.index)}>Удалить из меню</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditBurgerForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddBurgerForm from './AddBurgerForm';\r\nimport EditBurgerForm from './EditBurgerForm';\r\nimport firebase from 'firebase/app';\r\n\r\n\r\nclass MenuAdmin extends React.Component {\r\n\r\n    state = {\r\n        photo: '',\r\n        user: ''\r\n    };\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,        \r\n        updateBurger: PropTypes.func,\r\n        deleteBurger: PropTypes.func,\r\n        addBurger: PropTypes.func,\r\n        loadSampleBurgers: PropTypes.func,\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        const { email, photoURL } = authData.user;\r\n        this.setState({ user: email, photo: photoURL  });\r\n    };\r\n\r\n    render() {\r\n        const { user, photo } = this.state;\r\n        const avatar = photo ? photo : '/images/avatar.png';\r\n        return (\r\n            <div className='menu-admin'>\r\n                {user ? <div className='login-header'>\r\n                    <div className='avatar'>\r\n                        <img src={avatar} alt={user} />\r\n                    </div>\r\n                    <button className='buttonLogout' onClick={this.props.handleLogout}>\r\n                        Выйти\r\n                        </button>\r\n                </div> : null}\r\n                <h2>Управление Меню</h2>\r\n                {Object.keys(this.props.burgers).map(key => {\r\n                    return <EditBurgerForm\r\n                        key={key}\r\n                        index={key}\r\n                        deleteBurger={this.props.deleteBurger}\r\n                        updateBurger={this.props.updateBurger}\r\n                        burger={this.props.burgers[key]}\r\n                    />;\r\n                })}\r\n                <AddBurgerForm addBurger={this.props.addBurger} />\r\n                <button onClick={this.props.loadSampleBurgers}>Загрузить бургеры</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MenuAdmin;","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Чизбургер',\n    image: '/images/cheese.jpg',\n    desc:\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\n    price: 34,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Чикенбургер',\n    image: '/images/chicken.jpg',\n    desc:\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\n    price: 58,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Двойной Гамбургер',\n    image: '/images/double.jpg',\n    desc:\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\n    price: 67,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Фишбургер',\n    image: '/images/fish.jpg',\n    desc:\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\n    price: 57,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'Картофель Фри',\n    image: '/images/fries.jpg',\n    desc:\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\n    price: 26,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Бургер',\n    image: '/images/ham.jpg',\n    desc:\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\n    price: 102,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Мега Бургер',\n    image: '/images/mega.jpg',\n    desc:\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\n    price: 115,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Бургер в Пите',\n    image: '/images/pita.jpg',\n    desc:\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\n    price: 45,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Фри',\n    image: '/images/bakedFries.jpg',\n    desc:\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Burger extends React.Component {\r\n\r\n    static propTypes = {\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string\r\n        }),\r\n        index: PropTypes.string,\r\n        addToOrder: PropTypes.func\r\n    }\r\n\r\n    render() {\r\n        \r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n            <li className='menu-burger'>\r\n                <div className='image-container'>\r\n                    <img src={image} alt={name}/>\r\n                </div>\r\n\r\n                <div className='burger-details'>\r\n                    <h3 className='burger-name'>\r\n                        {name}\r\n                        <span className='price'>{price} ₴</span>\r\n                    </h3>\r\n                    <p>{desc}</p>\r\n                    <button\r\n                        className='buttonOrder'\r\n                        disabled={!isAvailable}\r\n                        onClick={() => this.props.addToOrder(this.props.index)}\r\n                    >\r\n                        {isAvailable ? 'Заказать': 'Временно нет'}</button>\r\n                </div>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Burger;","import Rebase from 're-base';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyDAnsuUzSYK4H_lixFqyDoKFJ8AVdmaYiI\",\r\n    authDomain: \"fir-test-8ef4f.firebaseapp.com\",\r\n    databaseURL: \"https://fir-test-8ef4f-default-rtdb.firebaseio.com\",\r\n});\r\n\r\nconst base = Rebase.createClass(firebaseApp.database());\r\n\r\nexport { firebaseApp };\r\n\r\nexport default base;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = props => {\r\n    return (\r\n        <div className='login-container'>\r\n            <nav className='login'>\r\n                <h2>Авторизация</h2>\r\n                <p>Введите логин и пароль вашего aккаунта Google</p>\r\n                <button className='github' onClick={() => props.authenticate()}>\r\n                    Войти\r\n        </button>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport Login from './Login';\r\nimport firebase from 'firebase/app';\r\nimport { firebaseApp } from '../../base';\r\n\r\nclass SignIn extends React.Component {\r\n    state = {\r\n        user: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user) {\r\n                this.authHandler({ user });\r\n            }\r\n        });\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        const { email } = authData.user;\r\n        this.setState({ user: email });\r\n    };\r\n\r\n    authenticate = () => {\r\n        const authProvider = new firebase.auth['GoogleAuthProvider']();\r\n        firebaseApp\r\n            .auth()\r\n            .signInWithPopup(authProvider)\r\n            .then(this.authHandler);\r\n    };\r\n\r\n    render() {\r\n        if (!this.state.user) {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport MenuAdmin from './MenuAdmin';\r\nimport sampleBurgers from '../sample-burgers';\r\nimport Burger from './Burger';\r\nimport base from '../base';\r\nimport firebase from 'firebase/app';\r\nimport SignIn from './Auth/SignIn';\r\n\r\nclass App extends React.Component{\r\n    static propTypes = {\r\n        match: PropTypes.object\r\n    }\r\n\r\n    state = {\r\n        burgers: {},\r\n        order: {}\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n\r\n        const localStorageRef = localStorage.getItem(params.restaurantId);\r\n        if (localStorageRef) {\r\n            this.setState({ order: JSON.parse(localStorageRef) });\r\n        }      \r\n\r\n        this.ref = base.syncState(`${params.restaurantId}/burgers`, {\r\n            context: this,\r\n            state: 'burgers'\r\n        });\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        const { params } = this.props.match;\r\n        localStorage.setItem(params.restaurantId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        base.removeBinding(this.ref);\r\n    };\r\n\r\n    addBurger = (burger) => {\r\n        console.log('addBurger', burger);\r\n        const burgers = { ...this.state.burgers };\r\n        burgers[`burger${Date.now()}`] = burger;\r\n        this.setState({burgers})\r\n    };\r\n\r\n    updateBurger =(key, updatedBurger)=> {\r\n        const burgers = { ...this.state.burgers };\r\n        burgers[key] = updatedBurger;\r\n        this.setState({ burgers });\r\n    };\r\n\r\n    deleteBurger = (key) => {\r\n        const burgers = { ...this.state.burgers };\r\n        burgers[key] = null;\r\n        this.setState({ burgers });\r\n    }\r\n\r\n    loadSampleBurgers = () => {\r\n        this.setState({ burgers: sampleBurgers });\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        const order = { ...this.state.order }\r\n        order[key] = order[key] + 1 || 1;\r\n        this.setState({ order });\r\n    };\r\n\r\n    deleteFromOrder = key => {\r\n        const order = { ...this.state.order };\r\n        delete order[key];\r\n        this.setState({ order });\r\n    }\r\n\r\n    handleLogout = async () => {\r\n        await firebase.auth().signOut();\r\n        window.location.reload();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <SignIn>\r\n            <div className='burger-paradise'>\r\n                <div className='menu'>\r\n                    <Header title=\"Hot Burger\" />\r\n                    <ul className='burgers'>\r\n                        {Object.keys(this.state.burgers).map(key => {\r\n                            return <Burger\r\n                                key={key}\r\n                                index={key}\r\n                                addToOrder={this.addToOrder}\r\n                                details={this.state.burgers[key]}\r\n                            />;\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n                <Order\r\n                    deleteFromOrder={this.deleteFromOrder}\r\n                    burgers={this.state.burgers}\r\n                    order={this.state.order}                    \r\n                />\r\n                <MenuAdmin\r\n                    addBurger={this.addBurger}\r\n                    loadSampleBurgers={this.loadSampleBurgers}\r\n                    burgers={this.state.burgers}\r\n                    updateBurger={this.updateBurger}\r\n                    deleteBurger={this.deleteBurger}\r\n                    handleLogout={this.handleLogout}\r\n                />\r\n                </div>\r\n            </SignIn>\r\n        );\r\n}\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div>\r\n            <h2>The Page is Not Found</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport Landing from './Landing';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/' component={Landing} />\r\n                <Route path='/restaurant/:restaurantId' component={App} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n};\r\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\n\nrender(<Router />, document.querySelector('#root'));\n"],"sourceRoot":""}